---
name: generate-devkit

on:
  push:
    branches: [releases]

env:
  NODE_ENV: production
  DEVKIT_BUILD: true
  CGO_ENABLED: '1'
  GITHUB_TOKEN: ${{ secrets.DEVKIT_RELEASE_SECRET }}

jobs:
  # build-amd64:
  #   runs-on: ${{ matrix.distro }}
  #   name: Build devkit on ${{ matrix.goarch }}
  #   strategy:
  #     matrix:
  #       include:
  #         - goos: linux
  #           goarch: amd64
  #           distro: ubuntu-22.04
  #           cc: gcc
  #   env:
  #     GOARCH: ${{ matrix.goarch }}
  #     GOOS: ${{ matrix.goos }}
  #     CC: ${{ matrix.cc }}
  #   steps:
  #     - run: |
  #         sudo apt update && \
  #         sudo apt-get install -y \
  #         build-essential wget curl ca-certificates git gcc openssl
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-go@v5
  #       with:
  #         go-version: '1.19.12'
  #     - run: rm -rf sdk && git clone https://oauth2:${{ secrets.DEVKIT_RELEASE_SECRET }}@github.com/flarehotspot/sdk.git sdk
  #     - run: mkdir -p system
  #     - run: cd system && git clone https://oauth2:${{ secrets.DEVKIT_RELEASE_SECRET }}@github.com/flarehotspot/com.flarego.default-theme.git
  #     - run: cp go.work.default go.work
  #     - run: go run ./core/internal/cli/flare-internal.go create-devkit
  #     - run: tree ./devkit-release
  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: devkit-${{ matrix.distro }}-${{ matrix.goarch }}
  #         path: devkit-release

  build-arm:
    runs-on: ubuntu-22.04
    name: Build on ${{ matrix.arch }}
    strategy:
      matrix:
        include:
          - arch: aarch64
            distro: ubuntu22.04
    steps:
      - run: |
          sudo apt update && \
          sudo apt-get install -y curl ca-certificates git openssl \
            gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu
      - uses: actions/checkout@v4
      - run: rm -rf sdk && git clone https://oauth2:${{ secrets.DEVKIT_RELEASE_SECRET }}@github.com/flarehotspot/sdk.git sdk
      - run: mkdir -p system
      - run: cd system && git clone https://oauth2:${{ secrets.DEVKIT_RELEASE_SECRET }}@github.com/flarehotspot/com.flarego.default-theme.git
      - run: cp go.work.default go.work
      - uses: actions/setup-go@v5
        with:
          go-version: '1.19.12'
      - run: GOOS=linux GOARCH=arm64 CC=aarch64-linux-gnu-gcc go build -o ./flare-internal ./core/internal/cli/flare-internal.go
      - run: GOOS=linux GOARCH=arm64 CC=aarch64-linux-gnu-gcc go build -o ./flare ./sdk/cli/flare.go
      - uses: uraimo/run-on-arch-action@v2.3.0
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          dockerRunArgs: |
            --volume "${PWD}:/build"
          env: | # YAML, but pipe character is necessary
            NODE_ENV: production
            DEVKIT_BUILD: true
            CGO_ENABLED: '1'
            GO_CUSTOM_PATH: /build/go
          # install: |
          #   apt-get update -q -y && \
          #     apt-get install -q -y gcc curl wget
          run: |
            cd /build && \
            ./flare install-go && \
            ./flare-internal create-devkit
      - run: tree ./devkit-release
      # - uses: actions/upload-artifact@v4
      #   with:
      #     name: devkit-${{ matrix.distro }}-${{ matrix.goarch }}
      #     path: devkit-release

  # publish-release:
  #   runs-on: ubuntu-22.04
  #   # needs: [build-amd64, build-arm]
  #   needs: [build-arm]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/download-artifact@v4
  #       with:
  #         path: devkit-release
  #     - run: tree ./devkit-release
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: '20'
  #     - run: npm install
  #     - run: node ./build/release-devkit.js
